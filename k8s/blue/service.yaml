apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  type: LoadBalancer
  selector:
    app: frontend
    version: blue  # or green, depending on which deployment you want to expose
  ports:
  - protocol: TCP
    port: 80
    targetPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
spec:
  type: LoadBalancer
  selector:
    app: backend
    version: blue  # or green
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8000

# #  usin nodeport
# apiVersion: v1
# kind: Service
# metadata:
#   name: frontend-service
# spec:
#   type: NodePort
#   selector:
#     app: frontend
#     version: green
#   ports:
#   - protocol: TCP
#     port: 80
#     targetPort: 3000
#     nodePort: 30080  # This port will be exposed on all nodes

# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: backend-service
# spec:
#   type: NodePort
#   selector:
#     app: backend
#     version: green
#   ports:
#   - protocol: TCP
#     port: 80
#     targetPort: 8000
#     nodePort: 30081  # This port will be exposed on all nodes



#  port : port that the service will listen on within the cluster.
#  targetport : port on which the application's container is listening, specifies where the traffic should be directed once it reaches the service.
#  nodeport : port on each node that will be exposed externally (outside the cluster),  port will allow external traffic to access the service through any node in the cluster.